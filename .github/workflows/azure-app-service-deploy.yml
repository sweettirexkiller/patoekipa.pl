name: Build and deploy Docker container to Azure Web App

on:
  push:
    branches:
      - mik/azure-app-service-deployment
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: patoekipa-portfolio
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/patoekipa-portfolio

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      image-tag: ${{ steps.meta.outputs.tags }}

    steps:
      - uses: actions/checkout@v4

      - name: Prepare shared assets
        run: |
          cd nextjs
          mkdir -p public/shared/assets
          cp -r ../shared/assets/* public/shared/assets/ 2>/dev/null || true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push container image to registry
        uses: docker/build-push-action@v5
        with:
          context: ./nextjs
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
            COSMOS_DB_ENDPOINT=${{ secrets.COSMOS_DB_ENDPOINT }}
            COSMOS_DB_KEY=${{ secrets.COSMOS_DB_KEY }}
            COSMOS_DB_DATABASE_NAME=${{ secrets.COSMOS_DB_DATABASE_NAME }}
            COSMOS_DB_CONTAINER_NAME=${{ secrets.COSMOS_DB_CONTAINER_NAME }}
            NODE_ENV=production
            NEXT_TELEMETRY_DISABLED=1

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE }}
          images: ${{ needs.build.outputs.image-tag }} 